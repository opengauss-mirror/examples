diff --git a/cmake/src/set_thirdparty_path.cmake b/cmake/src/set_thirdparty_path.cmake
index 6b0bb651..0246d8a3 100755
--- a/cmake/src/set_thirdparty_path.cmake
+++ b/cmake/src/set_thirdparty_path.cmake
@@ -37,30 +37,14 @@ set(LIB_UNIFIED_SUPPORT comm)
 set(MEMCHECK_BUILD_TYPE debug)
 set(DEPENDENCY_PATH ${3RD_PATH}/kernel/dependency)
 set(PLATFORM_PATH ${3RD_PATH}/kernel/platform)
-set(BUILDTOOLS_PATH ${3RD_PATH}/buildtools)
 set(COMPONENT_PATH ${3RD_PATH}/kernel/component)
 
-set(CJSON_HOME ${DEPENDENCY_PATH}/cjson/${SUPPORT_LLT})
-set(ETCD_HOME ${DEPENDENCY_PATH}/etcd/${LIB_UNIFIED_SUPPORT})
-set(EVENT_HOME ${DEPENDENCY_PATH}/event/${LIB_UNIFIED_SUPPORT})
-set(FIO_HOME ${DEPENDENCY_PATH}/fio/${SUPPORT_LLT})
-set(IPERF_HOME ${DEPENDENCY_PATH}/iperf/${LIB_UNIFIED_SUPPORT})
 if("${VERSION_TYPE}" STREQUAL "debug" OR "${VERSION_TYPE}" STREQUAL "memcheck")
     set(JEMALLOC_HOME ${DEPENDENCY_PATH}/jemalloc/debug${JEMALLOC_SUPPORT_LLT})
 else()
     set(JEMALLOC_HOME ${DEPENDENCY_PATH}/jemalloc/${VERSION_TYPE}${JEMALLOC_SUPPORT_LLT})
 endif()
 set(KERBEROS_HOME ${DEPENDENCY_PATH}/kerberos/${SUPPORT_LLT})
-set(KMC_HOME ${PLATFORM_PATH}/kmc/${LIB_UNIFIED_SUPPORT})
-set(CGROUP_HOME ${DEPENDENCY_PATH}/libcgroup/${SUPPORT_LLT})
-set(CURL_HOME ${DEPENDENCY_PATH}/libcurl/${SUPPORT_LLT})
-set(EDIT_HOME ${DEPENDENCY_PATH}/libedit/${SUPPORT_LLT})
-set(OBS_HOME ${DEPENDENCY_PATH}/libobs/${LIB_UNIFIED_SUPPORT})
-set(XML2_HOME ${DEPENDENCY_PATH}/libxml2/${SUPPORT_LLT})
-set(LLVM_HOME ${DEPENDENCY_PATH}/llvm/${LIB_UNIFIED_SUPPORT})
-set(LZ4_HOME ${DEPENDENCY_PATH}/lz4/${SUPPORT_LLT})
-set(NANOMSG_HOME ${DEPENDENCY_PATH}/nng/${LIB_UNIFIED_SUPPORT})
-set(NCURSES_HOME ${DEPENDENCY_PATH}/ncurses/${SUPPORT_LLT})
 set(AWSSDK_HOME ${DEPENDENCY_PATH}/aws-sdk-cpp/${SUPPORT_LLT})
 if(($ENV{WITH_TASSL}) STREQUAL "YES")
     set(OPENSSL_HOME ${DEPENDENCY_PATH}/tassl/${LIB_UNIFIED_SUPPORT})
@@ -68,38 +52,21 @@ else()
     set(OPENSSL_HOME ${DEPENDENCY_PATH}/openssl/${LIB_UNIFIED_SUPPORT})
 endif()
 
-set(PLJAVA_HOME ${DEPENDENCY_PATH}/pljava/${LIB_UNIFIED_SUPPORT})
-if (EXISTS "${PLATFORM_PATH}/openjdk8/${BUILD_TUPLE}/jdk")
-  set(JAVA_HOME ${PLATFORM_PATH}/openjdk8/${BUILD_TUPLE}/jdk)
+execute_process(
+    COMMAND bash -c "readlink -f $(which java) | sed 's:/jre/bin/java::'"
+    OUTPUT_VARIABLE JAVA_HOME_PATH
+    OUTPUT_STRIP_TRAILING_WHITESPACE
+)
+if(JAVA_HOME_PATH)
+    message(STATUS "Detected JAVA_HOME: ${JAVA_HOME_PATH}")
+    set(JAVA_HOME ${JAVA_HOME_PATH})
 else()
-  set(JAVA_HOME ${PLATFORM_PATH}/huaweijdk8/${BUILD_TUPLE}/jdk)
+    message(FATAL_ERROR "Unable to detect JAVA_HOME")
 endif()
-set(ZLIB_HOME ${DEPENDENCY_PATH}/zlib1.2.11/${SUPPORT_LLT})
 set(XGBOOST_HOME ${DEPENDENCY_PATH}/xgboost/${SUPPORT_LLT})
-set(ZSTD_HOME ${DEPENDENCY_PATH}/zstd)
-set(LICENSE_HOME ${PLATFORM_PATH}/AdaptiveLM_C_V100R005C01SPC002/${SUPPORT_LLT})
-set(HOTPATCH_HOME ${PLATFORM_PATH}/hotpatch)
 set(SECURE_HOME ${PLATFORM_PATH}/Huawei_Secure_C/${LIB_UNIFIED_SUPPORT})
 set(SECUREDYNAMICLIB_HOME ${PLATFORM_PATH}/Huawei_Secure_C/Dynamic_Lib)
 set(DCF_HOME ${COMPONENT_PATH}/dcf)
-set(DMS_HOME ${COMPONENT_PATH}/dms)
-set(DSS_HOME ${COMPONENT_PATH}/dss)
-
-set(MOCKCPP_HOME ${BUILDTOOLS_PATH}/mockcpp/${LIB_UNIFIED_SUPPORT})
-set(GTEST_HOME ${BUILDTOOLS_PATH}/gtest/${LIB_UNIFIED_SUPPORT})
-set(MASSTREE_HOME ${BUILDTOOLS_PATH}/masstree/${LIB_UNIFIED_SUPPORT})
-set(NUMA_HOME ${DEPENDENCY_PATH}/numactl/${SUPPORT_LLT})
-set(BOOST_HOME ${DEPENDENCY_PATH}/boost/${SUPPORT_LLT})
-set(ODBC_HOME ${DEPENDENCY_PATH}/unixodbc)
-set(MASSTREE_HOME ${DEPENDENCY_PATH}/masstree/${LIB_UNIFIED_SUPPORT})
-set(LCOV_HOME ${BUILDTOOLS_PATH}/gcc${GCC_VERSION_LIT}/gcc/lib/gcc/${HOST_TUPLE})
-set(GCC_LIB_PATH $ENV{GCC_INSTALL_HOME})
-set(MEMCHECK_LIB_PATH $ENV{GCC_INSTALL_HOME}/lib64/)
-if("${GCC_LIB_PATH}" STREQUAL "")
-    set(GCC_LIB_PATH ${BUILDTOOLS_PATH}/gcc${GCC_VERSION_LIT}/gcc)
-    set(MEMCHECK_HOME ${DEPENDENCY_PATH}/memcheck/${MEMCHECK_BUILD_TYPE})
-    set(MEMCHECK_LIB_PATH ${MEMCHECK_HOME}/gcc${GCC_VERSION}/lib/)
-endif()
 
 #############################################################################
 # lcov
@@ -209,22 +176,17 @@ set(LIBEDIT_LIB_PATH ${EDIT_HOME}/lib)
 #############################################################################
 # obs component
 #############################################################################
-set(LIBOBS_INCLUDE_PATH ${OBS_HOME}/include)
-set(LIBOBS_LIB_PATH ${OBS_HOME}/lib)
 
 #############################################################################
 # xml2 component
 #############################################################################
-set(LIBXML_INCLUDE_PATH ${XML2_HOME}/include)
-set(LIBXML_LIB_PATH ${XML2_HOME}/lib)
+set(LIBXML_INCLUDE_PATH /usr/include)
+set(LIBXML_LIB_PATH /usr/lib64)
 
 #############################################################################
 # llvm component
 #############################################################################
-set(LIBLLVM_BIN_PATH ${LLVM_HOME}/bin)
-set(LIBLLVM_INCLUDE_PATH ${LLVM_HOME}/include)
-set(LIBLLVM_LIB_PATH ${LLVM_HOME}/lib)
-set(LLVM_CONFIG ${LIBLLVM_BIN_PATH}/llvm-config)
+
 
 #############################################################################
 # lz4 component
@@ -256,8 +218,7 @@ set(LIBOPENSSL_INCLUDE_PATH ${OPENSSL_HOME}/include)
 #############################################################################
 # zlib component
 #############################################################################
-set(ZLIB_INCLUDE_PATH ${ZLIB_HOME}/include)
-set(ZLIB_LIB_PATH ${ZLIB_HOME}/lib)
+set(ZLIB_INCLUDE_PATH /usr/include/minizip)
 
 #############################################################################
 # xgboost component
diff --git a/contrib/pagehack/CMakeLists.txt b/contrib/pagehack/CMakeLists.txt
index b15bee10..e517b490 100644
--- a/contrib/pagehack/CMakeLists.txt
+++ b/contrib/pagehack/CMakeLists.txt
@@ -14,7 +14,7 @@ if(${ENABLE_DEBUG} STREQUAL "ON")
 endif()
 set(pagehack_COMPILE_OPTIONS ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${CHECK_OPTIONS} ${BIN_SECURE_OPTIONS} ${OPTIMIZE_OPTIONS})
 set(pagehack_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(pagehack_LINK_LIBS -lpgport -lcrypt -ldl -lm -ledit -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -lzstd -lpagecompression -llz4)
+set(pagehack_LINK_LIBS -lpgport -lcrypt -ldl -lm -ledit -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -lzstd -lpagecompression -llz4)
 add_bintarget(pagehack TGT_pagehack_SRC TGT_pagehack_INC "${pagehack_DEF_OPTIONS}" "${pagehack_COMPILE_OPTIONS}" "${pagehack_LINK_OPTIONS}" "${pagehack_LINK_LIBS}")
 add_dependencies(pagehack pgport_static pagecompression)
 target_link_directories(pagehack PUBLIC
diff --git a/contrib/pg_xlogdump/CMakeLists.txt b/contrib/pg_xlogdump/CMakeLists.txt
index d53590b2..5751a1b9 100644
--- a/contrib/pg_xlogdump/CMakeLists.txt
+++ b/contrib/pg_xlogdump/CMakeLists.txt
@@ -40,7 +40,7 @@ SET(TGT_xlogdump_INC
 SET(xlogdump_DEF_OPTIONS ${MACRO_OPTIONS} -DFRONTEND)
 SET(xlogdump_COMPILE_OPTIONS ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${CHECK_OPTIONS} ${BIN_SECURE_OPTIONS} ${OPTIMIZE_OPTIONS})
 SET(xlogdump_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-SET(xlogdump_LINK_LIBS libpgcommon.a -lpgport -lcrypt -ldl -lm -ledit -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+SET(xlogdump_LINK_LIBS libpgcommon.a -lpgport -lcrypt -ldl -lm -ledit -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 
 list(APPEND xlogdump_LINK_DIRS ${LIBUWAL_LINK_DIRS})
 list(APPEND xlogdump_LINK_OPTIONS ${LIBUWAL_LINK_OPTIONS})
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index d9a73aee..a87caa54 100755
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -176,121 +176,18 @@ install_file(${CMAKE_CURRENT_SOURCE_DIR}/include include)
 install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/include/common/config/cm_config.h DESTINATION include)
 
 # special
-install(CODE "execute_process(
-    COMMAND rm ${prefix_home}/include/pg_config_os.h
-    COMMAND rm ${prefix_home}/include/postgresql/server/pg_config_os.h)"
-)
-install(CODE "execute_process(
-    COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/include/port/linux.h ${prefix_home}/include/pg_config_os.h
-    COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/include/port/linux.h ${prefix_home}/include/postgresql/server/pg_config_os.h
-    COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/include/cm/libpq-fe.h ${prefix_home}/include/cm-libpq-fe.h)"
-)
-
 # open source install part
-if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
-    install(DIRECTORY ${JAVA_HOME}/jre/ DESTINATION jre FILE_PERMISSIONS OWNER_EXECUTE GROUP_EXECUTE OWNER_READ GROUP_READ)
-endif()
-
 if("${ENABLE_MULTIPLE_NODES}" STREQUAL "OFF")
     install(DIRECTORY ${DCF_LIB_PATH} DESTINATION .)
 endif()
-if(${ENABLE_MULTIPLE_NODES}_${ENABLE_PRIVATEGAUSS} STREQUAL OFF_OFF AND NOT ${ENABLE_LITE_MODE} STREQUAL ON)
-    if(EXISTS ${DMS_LIB_PATH})
-        install(DIRECTORY ${DMS_LIB_PATH} DESTINATION .)
-    endif()
-    if(EXISTS ${DSS_LIB_PATH})
-        install(DIRECTORY ${DSS_LIB_PATH} DESTINATION .)
-    endif()
-    if(EXISTS ${DSS_BIN_PATH})
-        install(DIRECTORY ${DSS_BIN_PATH} DESTINATION . FILE_PERMISSIONS OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE OWNER_READ GROUP_READ WORLD_READ OWNER_WRITE)
-    endif()
-endif()
-
-install(DIRECTORY ${ZSTD_LIB_PATH} DESTINATION . PATTERN "*.a" EXCLUDE)
-if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
-    install(DIRECTORY ${LIBOBS_LIB_PATH} DESTINATION .)
-    install(DIRECTORY ${LIBOBS_INCLUDE_PATH} DESTINATION include/postgresql/server/access/obs)
-endif()
-install(DIRECTORY ${CJSON_LIB_PATH} DESTINATION .)
-install(DIRECTORY ${CJSON_INCLUDE_PATH}/cjson DESTINATION include/postgresql/server)
-if(NOT ${ENABLE_LITE_MODE} STREQUAL ON)
-    install(DIRECTORY ${ETCD_BIN_PATH} DESTINATION .)
-    install(DIRECTORY ${IPERF_LIB_PATH} DESTINATION .)
-endif()
-if(NOT ${ENABLE_LITE_MODE} STREQUAL ON)
-if(NOT ${ENABLE_MULTIPLE_NODES}_${ENABLE_PRIVATEGAUSS} STREQUAL OFF_OFF)
-    install(DIRECTORY ${KMC_LIB_PATH} DESTINATION .)
-endif()
-endif()
-install(DIRECTORY ${LIBCURL_LIB_PATH} DESTINATION .)
-install(DIRECTORY ${AWSSDK_LIB_PATH} DESTINATION .)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     install(DIRECTORY ${KERBEROS_SBIN_PATH}/ DESTINATION bin)
     install(DIRECTORY ${KERBEROS_BIN_PATH} DESTINATION .)
     install(DIRECTORY ${KERBEROS_LIB_PATH} DESTINATION .)
 endif()
-install(DIRECTORY ${LZ4_LIB_PATH} DESTINATION .)
-install(DIRECTORY ${LZ4_BIN_PATH} DESTINATION .)
-install(DIRECTORY ${LIBOPENSSL_BIN_PATH} DESTINATION .)
-install(DIRECTORY ${LIBOPENSSL_LIB_PATH} DESTINATION . PATTERN "*.a" EXCLUDE )
-install(DIRECTORY ${ZLIB_LIB_PATH} DESTINATION . FILES_MATCHING PATTERN "libz.*")
-
-list(FIND MACRO_OPTIONS "-D__USE_NUMA" RET_NUMA)
-if(NOT ${RET_NUMA} EQUAL -1)
-    install(DIRECTORY ${NUMA_LIB_PATH} DESTINATION .)
-endif()
-
-if("${ENABLE_MOT}" STREQUAL "ON")
-install(DIRECTORY ${MASSTREE_LIB_PATH} DESTINATION .)
-install(CODE "execute_process(
-     COMMAND cp ${GCC_LIB_PATH}/lib64/libatomic.so.1.2.0 ${prefix_home}/lib/libatomic.so.1.2.0
-     COMMAND ln -fs libatomic.so.1.2.0 libatomic.so
-     COMMAND ln -fs libatomic.so.1.2.0 libatomic.so.1
-     WORKING_DIRECTORY ${prefix_home}/lib)"
-)
-install(CODE "message(\"-- Created symlink: libatomic.so -> libatomic.so.1.2.0\")")
-install(CODE "message(\"-- Created symlink: libatomic.so.1 -> libatomic.so.1.2.0\")")
-endif()
-
+install(DIRECTORY ${AWSSDK_LIB_PATH} DESTINATION .)
 install(FILES ${SECUREDYNAMICLIB_HOME}/libsecurec.so DESTINATION lib)
-install(FILES ${GCC_LIB_PATH}/lib64/libgcc_s.so.1 DESTINATION lib)
-install(FILES ${GCC_LIB_PATH}/lib64/libgomp.so DESTINATION lib)
-install(FILES ${GCC_LIB_PATH}/lib64/libgomp.so.1 DESTINATION lib)
-install(FILES ${GCC_LIB_PATH}/lib64/libgomp.so.1.0.0 DESTINATION lib)
 install(FILES ${XGBOOST_LIB_PATH}/libxgboost.so DESTINATION lib)
-if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
-    install(FILES ${PLJAVA_HOME}/lib/libpljava.so DESTINATION lib)
-    install(FILES ${PLJAVA_HOME}/java/pljava.jar DESTINATION lib/postgresql/java)
-    install(FILES ${PLJAVA_HOME}/udstools.py DESTINATION share/postgresql/tmp)
-endif()
-if(NOT ${ENABLE_MULTIPLE_NODES}_${ENABLE_PRIVATEGAUSS} STREQUAL OFF_OFF)
-    if("${SUPPORT_HOTPATCH}" STREQUAL "yes")
-        install(FILES ${LIBHOTPATCH_LIB_PATH}/libdoprapatch.a DESTINATION lib)
-    endif()
-endif()
-
-if("${ENABLE_MOT}" STREQUAL "ON")
-    install(DIRECTORY ${MASSTREE_LIB_PATH} DESTINATION .)
-    install(DIRECTORY ${GCC_LIB_PATH}/lib64/ DESTINATION lib
-        FILES_MATCHING PATTERN "libatomic.so*")
-endif()
-
-install(FILES ${GCC_LIB_PATH}/lib64/libgcc_s.so.1 DESTINATION lib)
-install(DIRECTORY ${GCC_LIB_PATH}/lib64/ DESTINATION lib
-    FILES_MATCHING PATTERN "libgomp.so*")
-
-install(CODE "execute_process(
-     COMMAND cp ${GCC_LIB_PATH}/lib64/libstdc++.so.6.0.${LIBSTD_SUB_VERSION} ${prefix_home}/lib/libstdc++.so.6
-     WORKING_DIRECTORY ${prefix_home}/lib)"
-)
-
-# install(DIRECTORY ${LIBCGROUP_LIB_PATH} DESTINATION . FILES_MATCHING PATTERN "libcgroup.so*")
-install(CODE "execute_process(
-COMMAND cp ${LIBCGROUP_LIB_PATH}/libcgroup.so.1.0.42 ${prefix_home}/lib/libcgroup.so
-COMMAND ln -fs libcgroup.so libcgroup.so.1
-WORKING_DIRECTORY ${prefix_home}/lib)"
-)
-install(CODE "message(\"-- Created symlink: libcgroup.so.1 -> libcgroup.so\")")
  
 # fastcheck part
 install(FILES ${PROJECT_SRC_DIR}/test/regress/stub/roach_api_stub/roach_api_stub.control
diff --git a/src/bin/gs_cgroup/CMakeLists.txt b/src/bin/gs_cgroup/CMakeLists.txt
index 3203cb54..78aa3372 100755
--- a/src/bin/gs_cgroup/CMakeLists.txt
+++ b/src/bin/gs_cgroup/CMakeLists.txt
@@ -18,7 +18,7 @@ set(TGT_cgroup_INC
 set(cgroup_DEF_OPTIONS ${MACRO_OPTIONS})
 set(cgroup_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(cgroup_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(cgroup_LINK_LIBS libelog.a -lpgport -lcrypt -ldl -lm -l${SECURE_C_CHECK} -pthread -lrt -lminiunz -lcgroup)
+set(cgroup_LINK_LIBS libelog.a -lpgport -lcrypt -ldl -lm -l${SECURE_C_CHECK} -pthread -lrt -lminizip -lcgroup)
 add_bintarget(gs_cgroup TGT_cgroup_SRC TGT_cgroup_INC "${cgroup_DEF_OPTIONS}" "${cgroup_COMPILE_OPTIONS}" "${cgroup_LINK_OPTIONS}" "${cgroup_LINK_LIBS}")
 add_dependencies(gs_cgroup elog_static pgport_static)
 target_link_directories(gs_cgroup PUBLIC
diff --git a/src/bin/gs_guc/CMakeLists.txt b/src/bin/gs_guc/CMakeLists.txt
index 285a6e11..b520892f 100755
--- a/src/bin/gs_guc/CMakeLists.txt
+++ b/src/bin/gs_guc/CMakeLists.txt
@@ -16,7 +16,7 @@ set(TGT_guc_INC
 set(guc_DEF_OPTIONS ${MACRO_OPTIONS})
 set(guc_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(guc_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(guc_LINK_LIBS libelog.a libconfig.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+set(guc_LINK_LIBS libelog.a libconfig.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 set(guc_LINK_DEPEND elog_static config_static pgport_static)
 set(guc_LINK_DIRS ${LIBOPENSSL_LIB_PATH} ${KERBEROS_LIB_PATH} ${CMAKE_BINARY_DIR}/lib
     ${LIBCURL_LIB_PATH} ${ZLIB_LIB_PATH} ${LIBCGROUP_LIB_PATH} ${LIBEDIT_LIB_PATH} ${SECURE_LIB_PATH})
@@ -54,7 +54,7 @@ set(TGT_encrypt_INC
 set(encrypt_DEF_OPTIONS ${MACRO_OPTIONS})
 set(encrypt_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(encrypt_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(encrypt_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+set(encrypt_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 add_bintarget(encrypt TGT_encrypt_SRC TGT_encrypt_INC "${encrypt_DEF_OPTIONS}" "${encrypt_COMPILE_OPTIONS}" "${encrypt_LINK_OPTIONS}" "${encrypt_LINK_LIBS}")
 add_dependencies(encrypt elog_static pgport_static)
 target_link_directories(encrypt PUBLIC
diff --git a/src/bin/gs_log/CMakeLists.txt b/src/bin/gs_log/CMakeLists.txt
index 675c3035..773b44ac 100755
--- a/src/bin/gs_log/CMakeLists.txt
+++ b/src/bin/gs_log/CMakeLists.txt
@@ -21,7 +21,7 @@ set(TGT_log_INC
 set(log_DEF_OPTIONS ${MACRO_OPTIONS})
 set(log_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(log_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(log_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+set(log_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 add_bintarget(gs_log TGT_log_SRC TGT_log_INC "${log_DEF_OPTIONS}" "${log_COMPILE_OPTIONS}" "${log_LINK_OPTIONS}" "${log_LINK_LIBS}")
 add_dependencies(gs_log elog_static pgport_static)
 target_link_directories(gs_log PUBLIC
diff --git a/src/bin/initdb/CMakeLists.txt b/src/bin/initdb/CMakeLists.txt
index 5a5aa668..a551cda6 100755
--- a/src/bin/initdb/CMakeLists.txt
+++ b/src/bin/initdb/CMakeLists.txt
@@ -31,7 +31,7 @@ set(TGT_initdb_INC
 set(initdb_DEF_OPTIONS ${MACRO_OPTIONS} -DFRONTEND)
 set(initdb_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(initdb_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(initdb_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+set(initdb_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 add_bintarget(gs_initdb TGT_initdb_SRC TGT_initdb_INC "${initdb_DEF_OPTIONS}" "${initdb_COMPILE_OPTIONS}" "${initdb_LINK_OPTIONS}" "${initdb_LINK_LIBS}")
 add_dependencies(gs_initdb elog_static pgport_static)
 target_link_directories(gs_initdb PUBLIC
diff --git a/src/bin/pg_basebackup/CMakeLists.txt b/src/bin/pg_basebackup/CMakeLists.txt
index dc5efefb..bc2da1cd 100755
--- a/src/bin/pg_basebackup/CMakeLists.txt
+++ b/src/bin/pg_basebackup/CMakeLists.txt
@@ -33,7 +33,7 @@ set(TGT_basebackup_INC
 set(basebackup_DEF_OPTIONS ${MACRO_OPTIONS} -DHAVE_LIBZ -DFRONTEND)
 set(basebackup_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(basebackup_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(basebackup_LINK_LIBS lib_string_obj libelog.a libbuildquery.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -llz4 -lzstd -lpagecompression)
+set(basebackup_LINK_LIBS lib_string_obj libelog.a libbuildquery.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -llz4 -lzstd -lpagecompression)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND basebackup_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
 endif()
@@ -79,7 +79,7 @@ set(TGT_receivexlog_INC
 set(receivexlog_DEF_OPTIONS ${MACRO_OPTIONS} -DHAVE_LIBZ -DFRONTEND)
 set(receivexlog_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(receivexlog_LINK_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS} -pie)
-set(receivexlog_LINK_LIBS lib_string_obj libelog.a libbuildquery.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -llz4)
+set(receivexlog_LINK_LIBS lib_string_obj libelog.a libbuildquery.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -llz4)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND receivexlog_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
 endif()
@@ -126,7 +126,7 @@ set(TGT_recvlogical_INC
 set(recvlogical_DEF_OPTIONS ${MACRO_OPTIONS} -DHAVE_LIBZ -DFRONTEND)
 set(recvlogical_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(recvlogical_LINK_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS} -pie)
-set(recvlogical_LINK_LIBS lib_string_obj libelog.a libbuildquery.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -llz4)
+set(recvlogical_LINK_LIBS lib_string_obj libelog.a libbuildquery.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -llz4)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND recvlogical_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
 endif()
diff --git a/src/bin/pg_config/CMakeLists.txt b/src/bin/pg_config/CMakeLists.txt
index 1bf4f96a..b8e8d863 100755
--- a/src/bin/pg_config/CMakeLists.txt
+++ b/src/bin/pg_config/CMakeLists.txt
@@ -17,7 +17,7 @@ SET(TGT_pgconfig_INC
 SET(pgconfig_DEF_OPTIONS ${MACRO_OPTIONS})
 SET(pgconfig_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS} -fstack-protector-all)
 SET(pgconfig_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-SET(pgconfig_LINK_LIBS libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+SET(pgconfig_LINK_LIBS libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 add_bintarget(pg_config TGT_pgconfig_SRC TGT_pgconfig_INC "${pgconfig_DEF_OPTIONS}" "${pgconfig_COMPILE_OPTIONS}" "${pgconfig_LINK_OPTIONS}" "${pgconfig_LINK_LIBS}")
 add_dependencies(pg_config pgport_static)
 target_link_directories(pg_config PUBLIC
diff --git a/src/bin/pg_controldata/CMakeLists.txt b/src/bin/pg_controldata/CMakeLists.txt
index 0da485c3..eaf4646c 100755
--- a/src/bin/pg_controldata/CMakeLists.txt
+++ b/src/bin/pg_controldata/CMakeLists.txt
@@ -19,7 +19,7 @@ set(TGT_controldata_INC
 set(controldata_DEF_OPTIONS ${MACRO_OPTIONS})
 set(controldata_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(controldata_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(controldata_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+set(controldata_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 add_bintarget(pg_controldata TGT_controldata_SRC TGT_controldata_INC "${controldata_DEF_OPTIONS}" "${controldata_COMPILE_OPTIONS}" "${controldata_LINK_OPTIONS}" "${controldata_LINK_LIBS}")
 add_dependencies(pg_controldata elog_static pgport_static)
 target_link_directories(pg_controldata PUBLIC
diff --git a/src/bin/pg_ctl/CMakeLists.txt b/src/bin/pg_ctl/CMakeLists.txt
index 7268a150..1bfdab75 100755
--- a/src/bin/pg_ctl/CMakeLists.txt
+++ b/src/bin/pg_ctl/CMakeLists.txt
@@ -30,7 +30,7 @@ set(TGT_gsctl_INC
 set(gsctl_DEF_OPTIONS ${MACRO_OPTIONS} -DHAVE_LIBZ -DFRONTEND)
 set(gsctl_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(gsctl_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(gsctl_LINK_LIBS libelog.a libbuildquery.a pg_rewind.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminiunz -lpagecompression -lzstd -llz4)
+set(gsctl_LINK_LIBS libelog.a libbuildquery.a pg_rewind.a libpgcommon.a libhotpatchclient.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminizip -lpagecompression -lzstd -llz4)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND gsctl_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
 endif()
diff --git a/src/bin/pg_dump/CMakeLists.txt b/src/bin/pg_dump/CMakeLists.txt
index b65f7f69..9d3652a9 100755
--- a/src/bin/pg_dump/CMakeLists.txt
+++ b/src/bin/pg_dump/CMakeLists.txt
@@ -72,9 +72,9 @@ endif()
 set(dump_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(dump_LINK_OPTIONS ${BIN_LINK_OPTIONS})
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
-    set(dump_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -lpq_ce -lcurl -lcjson)
+    set(dump_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -lpq_ce -lcurl -lcjson)
 else()
-    set(dump_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -lpq -lcurl -lcjson)
+    set(dump_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -lpq -lcurl -lcjson)
 endif()
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND dump_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
diff --git a/src/bin/pg_probackup/CMakeLists.txt b/src/bin/pg_probackup/CMakeLists.txt
index 062d37c3..05e8cd1f 100755
--- a/src/bin/pg_probackup/CMakeLists.txt
+++ b/src/bin/pg_probackup/CMakeLists.txt
@@ -22,7 +22,7 @@ set(TGT_probackup_INC ${ZLIB_INCLUDE_PATH} ${LZ4_INCLUDE_PATH} ${ZSTD_INCLUDE_PA
 set(probackup_DEF_OPTIONS ${MACRO_OPTIONS} -DFRONTEND -DHAVE_LIBZ)
 set(probackup_COMPILE_OPTIONS ${PROTECT_OPTIONS} ${BIN_SECURE_OPTIONS} ${OS_OPTIONS} ${WARNING_OPTIONS} ${OPTIMIZE_OPTIONS} ${CHECK_OPTIONS})
 set(probackup_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(probackup_LINK_LIBS libpgcommon.a libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -llz4 -lpq -lpagecompression -lzstd -laws-cpp-sdk-core -laws-cpp-sdk-s3)
+set(probackup_LINK_LIBS libpgcommon.a libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -llz4 -lpq -lpagecompression -lzstd -laws-cpp-sdk-core -laws-cpp-sdk-s3)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND probackup_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
 endif()
diff --git a/src/bin/pg_resetxlog/CMakeLists.txt b/src/bin/pg_resetxlog/CMakeLists.txt
index f8b1a889..15af6cb2 100755
--- a/src/bin/pg_resetxlog/CMakeLists.txt
+++ b/src/bin/pg_resetxlog/CMakeLists.txt
@@ -17,7 +17,7 @@ set(TGT_resetxlog_INC
 set(resetxlog_DEF_OPTIONS ${MACRO_OPTIONS})
 set(resetxlog_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(resetxlog_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(resetxlog_LINK_LIBS libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+set(resetxlog_LINK_LIBS libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 add_bintarget(pg_resetxlog TGT_resetxlog_SRC TGT_resetxlog_INC "${resetxlog_DEF_OPTIONS}" "${resetxlog_COMPILE_OPTIONS}" "${resetxlog_LINK_OPTIONS}" "${resetxlog_LINK_LIBS}")
 add_dependencies(pg_resetxlog pgport_static)
 target_link_directories(pg_resetxlog PUBLIC
diff --git a/src/bin/pg_upgrade/CMakeLists.txt b/src/bin/pg_upgrade/CMakeLists.txt
index 6ac9de77..c7d1e1aa 100755
--- a/src/bin/pg_upgrade/CMakeLists.txt
+++ b/src/bin/pg_upgrade/CMakeLists.txt
@@ -16,7 +16,7 @@ set(TGT_format_INC
 set(format_DEF_OPTIONS ${MACRO_OPTIONS})
 set(format_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(format_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(format_LINK_LIBS libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz)
+set(format_LINK_LIBS libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip)
 add_bintarget(pg_format_cu TGT_format_SRC TGT_format_INC "${format_DEF_OPTIONS}" "${format_COMPILE_OPTIONS}" "${format_LINK_OPTIONS}" "${format_LINK_LIBS}")
 add_dependencies(pg_format_cu pgport_static)
 target_link_directories(pg_format_cu PUBLIC
diff --git a/src/bin/pgxc_clean/CMakeLists.txt b/src/bin/pgxc_clean/CMakeLists.txt
index 31ee01cd..d1ca8327 100755
--- a/src/bin/pgxc_clean/CMakeLists.txt
+++ b/src/bin/pgxc_clean/CMakeLists.txt
@@ -16,7 +16,7 @@ set(TGT_clean_INC
 set(clean_DEF_OPTIONS ${MACRO_OPTIONS} -D_FORTIFY_SOURCE=2)
 set(clean_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS} -O2)
 set(clean_LINK_OPTIONS ${BIN_LINK_OPTIONS} -s)
-set(clean_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminiunz -lpq)
+set(clean_LINK_LIBS libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -lrt -lz -lminizip -lpq)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND clean_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
 endif()
diff --git a/src/bin/psql/CMakeLists.txt b/src/bin/psql/CMakeLists.txt
index 3b69e494..cc8bf488 100755
--- a/src/bin/psql/CMakeLists.txt
+++ b/src/bin/psql/CMakeLists.txt
@@ -72,9 +72,9 @@ endif()
 set(gsql_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(gsql_LINK_OPTIONS ${BIN_LINK_OPTIONS})
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
-    set(gsql_LINK_LIBS utils_aes_aes libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminiunz -ledit -lcjson -lcurl -lpq_ce -lncurses)
+    set(gsql_LINK_LIBS utils_aes_aes libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminizip -ledit -lcjson -lcurl -lpq_ce -lncurses)
 else()
-    set(gsql_LINK_LIBS utils_aes_aes libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminiunz -ledit -lcjson -lcurl -lpq -lncurses)
+    set(gsql_LINK_LIBS utils_aes_aes libelog.a libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminizip -ledit -lcjson -lcurl -lpq -lncurses)
 endif()
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND gsql_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
diff --git a/src/bin/scripts/CMakeLists.txt b/src/bin/scripts/CMakeLists.txt
index da7a0616..794918ee 100755
--- a/src/bin/scripts/CMakeLists.txt
+++ b/src/bin/scripts/CMakeLists.txt
@@ -95,7 +95,7 @@ set(TGT_scripts_INC
 set(scripts_DEF_OPTIONS ${MACRO_OPTIONS})
 set(scripts_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(scripts_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(scripts_LINK_LIBS libelog.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto  -l${SECURE_C_CHECK} -pthread -lrt -lz -lminiunz)
+set(scripts_LINK_LIBS libelog.a libpgport.a -lpq -lcrypt -ldl -lm -lssl -lcrypto  -l${SECURE_C_CHECK} -pthread -lrt -lz -lminizip)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND scripts_LINK_LIBS -lgssapi_krb5_gauss -lgssrpc_gauss -lkrb5_gauss -lkrb5support_gauss -lk5crypto_gauss -lcom_err_gauss)
 endif()
diff --git a/src/common/timezone/CMakeLists.txt b/src/common/timezone/CMakeLists.txt
index 491fae5f..ac0166a2 100755
--- a/src/common/timezone/CMakeLists.txt
+++ b/src/common/timezone/CMakeLists.txt
@@ -14,7 +14,7 @@ set(TGT_zic_INC
 set(zic_DEF_OPTIONS ${MACRO_OPTIONS})
 set(zic_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(zic_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(zic_LINK_LIBS libpgport.a -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminiunz)
+set(zic_LINK_LIBS libpgport.a -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminizip)
 add_bintarget(zic TGT_zic_SRC TGT_zic_INC "${zic_DEF_OPTIONS}" "${zic_COMPILE_OPTIONS}" "${zic_LINK_OPTIONS}" "${zic_LINK_LIBS}")
 add_dependencies(zic pgport_static)
 target_link_directories(zic PUBLIC
diff --git a/src/gausskernel/CMakeLists.txt b/src/gausskernel/CMakeLists.txt
index 0d1aefda..668d8c32 100755
--- a/src/gausskernel/CMakeLists.txt
+++ b/src/gausskernel/CMakeLists.txt
@@ -300,9 +300,9 @@ if(${USE_LIBXML})
 endif()
 
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
-    list(APPEND gaussdb_LINK_LIBS -lz -lminiunz -leSDKOBS -leSDKLogAPI -lpcre -liconv -lnghttp2 -llog4cpp -lcurl -llz4 -lcjson -l${JEMALLOC_LIB_NAME} -lcgroup -lzstd -lcom_err_gauss -lgssapi_krb5_gauss -lkrb5_gauss -lgssrpc_gauss -lk5crypto_gauss -lkadm5clnt_mit -lkadm5srv_mit -lkdb5 -lkrb5support_gauss -lstdc++ -lboost_thread -lboost_chrono -lboost_system -lboost_atomic -lxml2 -laio -lncurses -ltinfo -latomic)
+    list(APPEND gaussdb_LINK_LIBS -lz -lminizip -leSDKOBS -leSDKLogAPI -lpcre -liconv -lnghttp2 -llog4cpp -lcurl -llz4 -lcjson -l${JEMALLOC_LIB_NAME} -lcgroup -lzstd -lcom_err_gauss -lgssapi_krb5_gauss -lkrb5_gauss -lgssrpc_gauss -lk5crypto_gauss -lkadm5clnt_mit -lkadm5srv_mit -lkdb5 -lkrb5support_gauss -lstdc++ -lboost_thread -lboost_chrono -lboost_system -lboost_atomic -lxml2 -laio -lncurses -ltinfo -latomic)
 else()
-    list(APPEND gaussdb_LINK_LIBS -lz -lminiunz -lcurl -llz4 -lcjson -l${JEMALLOC_LIB_NAME} -lcgroup -lzstd -lncurses -ltinfo -lboost_thread -lboost_chrono -lboost_system -lboost_atomic)
+    list(APPEND gaussdb_LINK_LIBS -lz -lminizip -lcurl -llz4 -lcjson -l${JEMALLOC_LIB_NAME} -lcgroup -lzstd -lncurses -ltinfo -lboost_thread -lboost_chrono -lboost_system -lboost_atomic)
 endif()
 
 if(NOT "${ENABLE_JEMALLOC}" STREQUAL "ON")
diff --git a/src/lib/gstrace/CMakeLists.txt b/src/lib/gstrace/CMakeLists.txt
index 803f369e..6e79d4e5 100755
--- a/src/lib/gstrace/CMakeLists.txt
+++ b/src/lib/gstrace/CMakeLists.txt
@@ -16,7 +16,7 @@ set(TGT_trace_INC
 set(trace_DEF_OPTIONS ${MACRO_OPTIONS})
 set(trace_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(trace_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(trace_LINK_LIBS libgstrace.a -lcgroup libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminiunz)
+set(trace_LINK_LIBS libgstrace.a -lcgroup libpgport.a -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminizip)
 if(NOT "${ENABLE_LITE_MODE}" STREQUAL "ON")
     list(APPEND trace_LINK_LIBS -lgssapi_krb5_gauss -lkrb5_gauss -lk5crypto_gauss -lcom_err_gauss -lkrb5support_gauss)
 endif()
diff --git a/src/test/regress/CMakeLists.txt b/src/test/regress/CMakeLists.txt
index 1bc95c51..6928d4d7 100755
--- a/src/test/regress/CMakeLists.txt
+++ b/src/test/regress/CMakeLists.txt
@@ -15,7 +15,7 @@ set(pg_regress_single_DEF_OPTIONS ${MACRO_OPTIONS} -DHOST_TUPLE="${HOST_TUPLE}"
 set(pg_regress_single_main_DEF_OPTIONS ${MACRO_OPTIONS})
 set(pg_regress_single_COMPILE_OPTIONS ${OPTIMIZE_OPTIONS} ${OS_OPTIONS} ${PROTECT_OPTIONS} ${WARNING_OPTIONS} ${BIN_SECURE_OPTIONS} ${CHECK_OPTIONS})
 set(pg_regress_single_LINK_OPTIONS ${BIN_LINK_OPTIONS})
-set(pg_regress_single_LINK_LIBS pg_regress_single_obj -lpgport -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminiunz)
+set(pg_regress_single_LINK_LIBS pg_regress_single_obj -lpgport -lcrypt -ldl -lm -lssl -lcrypto -l${SECURE_C_CHECK} -pthread -lrt -lz -lminizip)
 add_static_objtarget(pg_regress_single_obj TGT_pg_regress_single_SRC TGT_pg_regress_single_INC "${pg_regress_single_DEF_OPTIONS}" "${pg_regress_single_COMPILE_OPTIONS}" "${pg_regress_single_LINK_OPTIONS}")
 add_bintarget(pg_regress_single TGT_pg_regress_single_main_SRC TGT_pg_regress_single_INC "${pg_regress_single_main_DEF_OPTIONS}" "${pg_regress_single_COMPILE_OPTIONS}" "${pg_regress_single_LINK_OPTIONS}" "${pg_regress_single_LINK_LIBS}")
 add_dependencies(pg_regress_single pg_regress_single_obj pgport_static)
