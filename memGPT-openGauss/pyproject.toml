[project]
name = "letta"
version = "0.8.11"
description = "Create LLM agents with long-term memory and custom tools"
authors = [
    {name = "Letta Team", email = "contact@letta.com"},
]
license = {text = "Apache License"}
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
    "typer>=0.15.2,<0.16",
    "questionary>=2.0.1,<3.0",
    "pytz>=2023.3.post1,<2024",
    "tqdm>=4.66.1,<5.0",
    "black[jupyter]>=24.2.0,<25.0",
    "setuptools>=70,<71",
    "prettytable>=3.9.0,<4.0",
    "docstring-parser>=0.16,<0.17",
    "httpx>=0.28.0,<0.29",
    "numpy>=1.26.2,<2.0",
    "demjson3>=3.0.6,<4.0",
    "pyyaml>=6.0.1,<7.0",
    "sqlalchemy-json>=0.7.0,<0.8",
    "pydantic>=2.10.6,<3.0",
    "html2text>=2020.1.16",
    "sqlalchemy[asyncio]>=2.0.41,<3.0",
    "python-box>=7.1.1,<8.0",
    "sqlmodel>=0.0.16,<0.1",
    "python-multipart>=0.0.19,<0.1",
    "sqlalchemy-utils>=0.41.2,<0.42",
    "pydantic-settings>=2.2.1,<3.0",
    "httpx-sse>=0.4.0,<0.5",
    "nltk>=3.8.1,<4.0",
    "jinja2>=3.1.5,<4.0",
    "composio-core>=0.7.7,<0.8",
    "alembic>=1.13.3,<2.0",
    "pyhumps>=3.8.0,<4.0",
    "pathvalidate>=3.2.1,<4.0",
    "sentry-sdk[fastapi]==2.19.1",
    "rich>=13.9.4,<14.0",
    "brotli>=1.1.0,<2.0",
    "grpcio>=1.68.1,<2.0",
    "grpcio-tools>=1.68.1,<2.0",
    "llama-index>=0.12.2,<0.13",
    "llama-index-embeddings-openai>=0.3.1,<0.4",
    "anthropic>=0.49.0,<0.50",
    "letta_client>=0.1.183,<0.2",
    "openai>=1.60.0,<2.0",
    "opentelemetry-api==1.30.0",
    "opentelemetry-sdk==1.30.0",
    "opentelemetry-instrumentation-requests==0.51b0",
    "opentelemetry-exporter-otlp==1.30.0",
    "faker>=36.1.0,<37.0",
    "colorama>=0.4.6,<0.5",
    "marshmallow-sqlalchemy>=1.4.1,<2.0",
    "datamodel-code-generator[http]>=0.25.0,<0.26",
    "mcp[cli]>=1.9.4,<2.0",
    "firecrawl-py>=2.8.0,<3.0",
    "apscheduler>=3.11.0,<4.0",
    "aiomultiprocess>=0.9.1,<0.10",
    "matplotlib>=3.10.1,<4.0",
    "tavily-python>=0.7.2,<0.8",
    "mistralai>=1.8.1,<2.0",
    "structlog>=25.4.0,<26.0",
    "certifi>=2025.6.15",
    "pinecone[asyncio]>=7.3.0,<8.0",
    "aiosqlite>=0.21.0,<0.22",
]

[project.optional-dependencies]
postgres = [
    "pgvector>=0.2.3,<0.3",
    "pg8000>=1.30.3,<2.0",
    "psycopg2-binary>=2.9.10,<3.0",
    "asyncpg>=0.30.0,<0.31",
]
redis = [
    "redis>=6.2.0,<7.0",
]
dev = [
    "pytest",
    "pytest-asyncio>=0.24.0,<0.25",
    "pexpect>=4.9.0,<5.0",
    "black>=24.2.0,<25.0",
    "pre-commit>=3.5.0,<4.0",
    "pyright>=1.1.347,<2.0",
    "pytest-order>=1.2.0,<2.0",
    "autoflake>=2.3.0,<3.0",
    "isort>=5.13.2,<6.0",
    "locust>=2.31.5,<3.0",
]
experimental = [
    "uvloop>=0.21.0,<0.22",
    "granian[uvloop,reload]>=2.3.2,<3.0",
]
server = [
    "fastapi>=0.115.6,<0.116",
    "uvicorn>=0.24.0.post1,<0.25",
]
cloud-tool-sandbox = [
    "e2b-code-interpreter>=1.0.3,<2.0",
]
external-tools = [
    "docker>=7.1.0,<8.0",
    "langchain>=0.3.7,<0.4",
    "wikipedia>=1.4.0,<2.0",
    "langchain-community>=0.3.7,<0.4",
    "firecrawl-py>=2.8.0,<3.0",
]
tests = [
    "wikipedia>=1.4.0,<2.0",
]
bedrock = [
    "boto3>=1.36.24,<2.0",
    "aioboto3>=14.3.0,<15.0",
]
google = [
    "google-genai>=1.15.0,<2.0",
]
desktop = [
    "pgvector>=0.2.3,<0.3",
    "pg8000>=1.30.3,<2.0",
    "psycopg2-binary>=2.9.10,<3.0",
    "pyright>=1.1.347,<2.0",
    "fastapi>=0.115.6,<0.116",
    "uvicorn>=0.24.0.post1,<0.25",
    "docker>=7.1.0,<8.0",
    "langchain>=0.3.7,<0.4",
    "wikipedia>=1.4.0,<2.0",
    "langchain-community>=0.3.7,<0.4",
    "locust>=2.31.5,<3.0",
]
all = [
    "pgvector>=0.2.3,<0.3",
    "pg8000>=1.30.3,<2.0",
    "psycopg2-binary>=2.9.10,<3.0",
    "pytest",
    "pytest-asyncio>=0.24.0,<0.25",
    "pexpect>=4.9.0,<5.0",
    "black>=24.2.0,<25.0",
    "pre-commit>=3.5.0,<4.0",
    "pyright>=1.1.347,<2.0",
    "pytest-order>=1.2.0,<2.0",
    "autoflake>=2.3.0,<3.0",
    "isort>=5.13.2,<6.0",
    "fastapi>=0.115.6,<0.116",
    "uvicorn>=0.24.0.post1,<0.25",
    "docker>=7.1.0,<8.0",
    "langchain>=0.3.7,<0.4",
    "wikipedia>=1.4.0,<2.0",
    "langchain-community>=0.3.7,<0.4",
    "locust>=2.31.5,<3.0",
    "uvloop>=0.21.0,<0.22",
    "granian[uvloop,reload]>=2.3.2,<3.0",
    "redis>=6.2.0,<7.0",
]

[project.scripts]
letta = "letta.main:app"

[tool.black]
line-length = 140
target-version = ['py310', 'py311', 'py312', 'py313']
extend-exclude = "examples/*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 140
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
