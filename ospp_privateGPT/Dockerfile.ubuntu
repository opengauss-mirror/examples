# 使用 Ubuntu 22.04 作为基础镜像，包含 Python 3.11
FROM ubuntu:22.04

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PORT=8001

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3.11-distutils \
    python3-pip \
    git \
    curl \
    build-essential \
    libpq-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# 设置 Python 版本别名
RUN ln -sf /usr/bin/python3.11 /usr/bin/python

# 安装 Poetry
RUN curl -sSL https://install.python-poetry.org | python3 - && \
    ln -s /root/.local/bin/poetry /usr/local/bin/poetry

# 克隆 private-gpt 仓库
RUN git clone https://github.com/Suchun-sv/private-gpt.git /app

RUN poetry env use python3.11

# 配置 Poetry
RUN poetry config virtualenvs.create false

# 复制 poetry 配置文件
# COPY pyproject.toml poetry.lock ./

# 安装 Python 依赖
RUN poetry lock && \
    poetry install --extras "ui llms-ollama embeddings-ollama vector-stores-postgres storage-nodestore-postgres"

RUN poetry run pip install llama-index-vector-stores-opengauss

RUN poetry install

# 复制自定义配置文件
COPY settings-ollama-gauss.yaml /app/settings-ollama-opengauss.yaml
COPY settings.yaml /app/settings.yaml

# 创建必要的目录
RUN mkdir -p local_data models

# 设置权限
RUN chmod +x scripts/*.py

# 暴露端口
EXPOSE 8001

# 健康检查
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# 启动命令
CMD ["sh", "-c", "export PGPT_PROFILES=ollama-opengauss && make run || tail -f /dev/null"]
